import clsx from 'clsx'
import { getCookie, hasCookie, setCookie } from 'cookies-next'
import { useRouter } from 'next/router'
import { FC, useEffect, useRef, useState } from 'react'
import cx from 'classnames'

import styles from '../Navbar.module.scss'
import Drop from '@/assets/icons/drop.svg'
import { useOnClickOutside } from 'usehooks-ts'
export interface LanguagesProps {}

const Languages: FC<LanguagesProps> = () => {
  const [isShown, setShown] = useState<boolean>(false)
  const toggle = () => setShown(prevState => !prevState)
  const { route } = useRouter()
  const languages = [
    {
      label: 'Az',
      value: '/auto/az',
      icon: (
        <svg
          width='24'
          height='24'
          viewBox='0 0 24 24'
          fill='none'
          xmlns='http://www.w3.org/2000/svg'
        >
          <path d='M0 9H24V15H0V9Z' fill='#EC1C24' />
          <path
            d='M20.25 3.75H3.75C1.26488 3.75 0 5.59688 0 7.875V9H24V7.875C24 5.59688 22.7351 3.75 20.25 3.75Z'
            fill='#1B75BB'
          />
          <path
            d='M0 16.125C0 18.4031 1.26488 20.25 3.75 20.25H20.25C22.7351 20.25 24 18.4031 24 16.125V15H0V16.125Z'
            fill='#29B473'
          />
          <path
            fillRule='evenodd'
            clipRule='evenodd'
            d='M13.2564 13.2113C12.7715 13.965 11.7628 14.4424 10.7071 14.1349C9.71152 13.8435 9.02752 12.8786 9.0849 11.838C9.13965 10.7925 9.92415 9.903 10.9449 9.7215C12.026 9.53063 12.8934 10.1096 13.2654 10.7153C12.8248 10.2848 12.314 10.089 11.7155 10.1584C11.2471 10.2124 10.8549 10.4239 10.5489 10.7809C9.94815 11.4795 9.9699 12.5284 10.5976 13.1884C10.9569 13.5671 11.399 13.7644 11.9214 13.7693C12.4423 13.773 12.884 13.5758 13.2564 13.2113Z'
            fill='#E6E7E8'
          />
          <path
            d='M14.9363 12.2318L15.5063 11.9573L14.9363 11.6813L15.1463 11.0862L14.5481 11.295L14.2725 10.7254L13.9988 11.295L13.4018 11.0862L13.6088 11.6813L13.041 11.9573L13.6088 12.2318L13.4018 12.8288L13.9988 12.6207L14.2725 13.1888L14.5481 12.6207L15.1463 12.8288L14.9363 12.2318Z'
            fill='#E6E7E8'
          />
        </svg>
      )
    },
    {
      label: 'En',
      value: '/auto/en',
      icon: (
        <svg
          xmlns='http://www.w3.org/2000/svg'
          width='24'
          height='24'
          viewBox='0 0 24 24'
          fill='none'
        >
          <path
            d='M9.75 6.65997V7.92747H23.9869C23.967 7.51872 23.9242 7.00197 23.7712 6.65997'
            fill='#EC1C24'
          />
          <path
            d='M23.1 5.39252H9.75V6.66002H23.7712C23.619 6.18714 23.3925 5.75589 23.1 5.39252Z'
            fill='#E6E7E8'
          />
          <path
            d='M20.25 4.125H9.75V5.3925H23.1C22.4741 4.60875 21.444 4.125 20.25 4.125Z'
            fill='#EC1C24'
          />
          <path
            d='M23.9869 7.92749H9.75V9.19499H24V8.35012C24 8.27474 23.9951 8.20124 23.9929 8.12737C23.9914 8.10712 23.9891 8.05499 23.9869 7.92749Z'
            fill='#E6E7E8'
          />
          <path d='M9.75 10.4625H24V9.19501H9.75V10.4625Z' fill='#EC1C24' />
          <path d='M9.75 11.73H24V10.4625H9.75V11.73Z' fill='#E6E7E8' />
          <path d='M9.75 11.73H24V12.9975H9.75V11.73Z' fill='#EC1C24' />
          <path d='M0 12.9975V14.265H24V12.9975H9.75H0Z' fill='#E6E7E8' />
          <path d='M0 14.265H24V15.5325H0V14.265Z' fill='#EC1C24' />
          <path
            d='M0.001875 16.3121C0.001875 16.3121 -0.0015 16.6192 0.0075 16.8H23.9925C24.003 16.6147 23.9981 16.3121 23.9981 16.3121L24 15.5325H0L0.001875 16.3121Z'
            fill='#E6E7E8'
          />
          <path
            d='M3.74979 20.625H20.2498C21.4472 20.625 22.4424 20.19 23.1223 19.335H0.873535C1.57554 20.2088 2.58954 20.625 3.74791 20.625'
            fill='#EC1C24'
          />
          <path
            d='M0.875801 19.335H23.1246C23.4212 18.9581 23.6427 18.5279 23.7771 18.0675H0.227051C0.363962 18.5265 0.584543 18.9562 0.877676 19.335'
            fill='#E6E7E8'
          />
          <path
            d='M0.224824 18.0675H23.7748C23.8976 17.6552 23.9706 17.2297 23.9923 16.8H0.00732422C0.0444492 17.2335 0.0789492 17.5609 0.224824 18.0675Z'
            fill='#EC1C24'
          />
          <path
            d='M9.75 4.125H3.75C1.26488 4.125 0 5.97187 0 8.25V12.9975H9.75V4.125Z'
            fill='#176496'
          />
          <path
            d='M1.04927 6.36598L1.25327 6.20923L1.4569 6.36598L1.37777 6.11398L1.58065 5.95985H1.33015L1.25252 5.70673L1.17527 5.95985H0.925148L1.12877 6.11398L1.04927 6.36598ZM2.39702 6.36598L2.60102 6.20923L2.80465 6.36598L2.7259 6.11398L2.9284 5.95985H2.67827L2.60065 5.70673L2.5234 5.95985H2.27252L2.47615 6.11398L2.39702 6.36598ZM3.8839 6.36598L4.08752 6.20923L4.29152 6.36598L4.2124 6.11398L4.4149 5.95985H4.16627L4.08752 5.70673L4.0099 5.95985H3.76127L3.96265 6.11398L3.8839 6.36598ZM5.3599 6.36598L5.56352 6.20923L5.76752 6.36598L5.68877 6.11398L5.89127 5.95985H5.64002L5.56352 5.70673L5.48627 5.95985H5.23577L5.43902 6.11398L5.3599 6.36598ZM6.84115 6.36598L7.04515 6.20923L7.24877 6.36598L7.17002 6.11398L7.3729 5.95985H7.12202L7.04477 5.70673L6.96752 5.95985H6.7174L6.9199 6.11398L6.84115 6.36598ZM1.76665 7.0241L1.97027 6.86773L2.1739 7.0241L2.09552 6.77248L2.29802 6.61835H2.04752L1.9699 6.3656L1.89377 6.61835H1.64252L1.8454 6.77248L1.76665 7.0241ZM3.11477 7.0241L3.3184 6.86773L3.52202 7.0241L3.44327 6.77248L3.64577 6.61835H3.39377L3.3184 6.3656L3.24077 6.61835H2.99065L3.19352 6.77248L3.11477 7.0241ZM4.60165 7.0241L4.8049 6.86773L5.00852 7.0241L4.92977 6.77248L5.13265 6.61835H4.88252L4.8049 6.3656L4.72727 6.61835H4.47677L4.67965 6.77248L4.60165 7.0241ZM6.0769 7.0241L6.2809 6.86773L6.4849 7.0241L6.40502 6.77248L6.60827 6.61835H6.35815L6.28052 6.3656L6.20365 6.61835H5.95315L6.15602 6.77248L6.0769 7.0241ZM7.56002 7.0241L7.76215 6.86773L7.96577 7.0241L7.88627 6.77248L8.08952 6.61835H7.83977L7.76177 6.3656L7.6849 6.61835H7.4344L7.63727 6.77248L7.56002 7.0241ZM8.39515 6.36598L8.59877 6.20923L8.80277 6.36598L8.72365 6.11398L8.92615 5.95985H8.67752L8.5984 5.70673L8.52115 5.95985H8.26877L8.4739 6.11398L8.39515 6.36598ZM1.0294 11.6325L1.2334 11.4776L1.43702 11.6325L1.35827 11.3827L1.56077 11.2282L1.31065 11.229L1.23265 10.9762L1.15615 11.229L0.905273 11.2282L1.10815 11.3827L1.0294 11.6325ZM2.37752 11.6325L2.58115 11.4776L2.78515 11.6325L2.70602 11.3827L2.90852 11.2282L2.65877 11.229L2.58077 10.9762L2.5039 11.229L2.25377 11.2282L2.45627 11.3827L2.37752 11.6325ZM3.8644 11.6325L4.06802 11.4776L4.27202 11.6325L4.1929 11.3827L4.3954 11.2282L4.14377 11.229L4.06765 10.9762L3.9904 11.229L3.74027 11.2282L3.94315 11.3827L3.8644 11.6325ZM5.3404 11.6325L5.54402 11.4776L5.74765 11.6325L5.67002 11.3827L5.8714 11.2282L5.6209 11.229L5.54365 10.9762L5.4664 11.229L5.21627 11.2282L5.41877 11.3827L5.3404 11.6325ZM6.82127 11.6325L7.02527 11.4776L7.22927 11.6325L7.15127 11.3827L7.35265 11.2282L7.10252 11.229L7.0249 10.9762L6.94802 11.229L6.69752 11.2282L6.90002 11.3827L6.82127 11.6325ZM8.37527 11.6325L8.5789 11.4776L8.7829 11.6325L8.70377 11.3827L8.90665 11.2282L8.65502 11.229L8.57852 10.9762L8.50127 11.229L8.25002 11.2282L8.45402 11.3827L8.37527 11.6325ZM1.04927 7.68298L1.25327 7.52623L1.4569 7.68298L1.37777 7.43098L1.58065 7.27685L1.33015 7.2776L1.25252 7.0241L1.17527 7.2776L0.925148 7.27685L1.12877 7.43098L1.04927 7.68298ZM2.39702 7.68298L2.60102 7.52623L2.80465 7.68298L2.7259 7.43098L2.9284 7.27685L2.67827 7.2776L2.60065 7.0241L2.5234 7.2776L2.27252 7.27685L2.47615 7.43098L2.39702 7.68298ZM3.8839 7.68298L4.08752 7.52623L4.29152 7.68298L4.2124 7.43098L4.4149 7.27685L4.16627 7.2776L4.08752 7.0241L4.0099 7.2776L3.76127 7.27685L3.96265 7.43098L3.8839 7.68298ZM5.3599 7.68298L5.56352 7.52623L5.76752 7.68298L5.68877 7.43098L5.89127 7.27685L5.64002 7.2776L5.56352 7.0241L5.48627 7.2776L5.23577 7.27685L5.43902 7.43098L5.3599 7.68298ZM6.84115 7.68298L7.04515 7.52623L7.24877 7.68298L7.17002 7.43098L7.3729 7.27685L7.12202 7.2776L7.04477 7.0241L6.96752 7.2776L6.7174 7.27685L6.9199 7.43098L6.84115 7.68298ZM1.76665 8.34148L1.97027 8.1851L2.1739 8.34148L2.09552 8.08985L2.29802 7.93498H2.04752L1.9699 7.68298L1.89377 7.93498H1.64252L1.8454 8.08985L1.76665 8.34148ZM3.11477 8.34148L3.3184 8.1851L3.52202 8.34148L3.44327 8.08985L3.64577 7.93498H3.39377L3.3184 7.68298L3.24077 7.93498H2.99065L3.19352 8.08985L3.11477 8.34148ZM4.60165 8.34148L4.8049 8.1851L5.00852 8.34148L4.92977 8.08985L5.13265 7.93498H4.88252L4.8049 7.68298L4.72727 7.93498H4.47677L4.67965 8.08985L4.60165 8.34148ZM6.0769 8.34148L6.2809 8.1851L6.4849 8.34148L6.40502 8.08985L6.60827 7.93498H6.35815L6.28052 7.68298L6.20365 7.93498H5.95315L6.15602 8.08985L6.0769 8.34148ZM7.56002 8.34148L7.76215 8.1851L7.96577 8.34148L7.88627 8.08985L8.08952 7.93498H7.83977L7.76177 7.68298L7.6849 7.93498H7.4344L7.63727 8.08985L7.56002 8.34148ZM8.39515 7.68298L8.59877 7.52623L8.80277 7.68298L8.72365 7.43098L8.92615 7.27685L8.67752 7.2776L8.5984 7.0241L8.52115 7.2776L8.26877 7.27685L8.4739 7.43098L8.39515 7.68298ZM1.0294 8.99998L1.2334 8.8436L1.43702 8.99998L1.3579 8.74873L1.56077 8.59423L1.31027 8.59498L1.23265 8.34148L1.15615 8.59498L0.905273 8.59423L1.10815 8.74873L1.0294 8.99998ZM2.37752 8.99998L2.58115 8.8436L2.78515 8.99998L2.70602 8.74873L2.90852 8.59423L2.65877 8.59498L2.58077 8.34148L2.5039 8.59498L2.25377 8.59423L2.4559 8.74873L2.37752 8.99998ZM3.8644 8.99998L4.06802 8.8436L4.27165 8.99998L4.1929 8.74873L4.3954 8.59423L4.14377 8.59498L4.06765 8.34148L3.9904 8.59498L3.74027 8.59423L3.94315 8.74873L3.8644 8.99998ZM5.3404 8.99998L5.54365 8.8436L5.74765 8.99998L5.67002 8.74873L5.8714 8.59423L5.6209 8.59498L5.54365 8.34148L5.4664 8.59498L5.21627 8.59423L5.41877 8.74873L5.3404 8.99998ZM6.82127 8.99998L7.02527 8.8436L7.2289 8.99998L7.15127 8.74873L7.35265 8.59423L7.10215 8.59498L7.0249 8.34148L6.94802 8.59498L6.69752 8.59423L6.90002 8.74873L6.82127 8.99998ZM1.74677 9.65848L1.9504 9.50248L2.15402 9.65848L2.07565 9.40873L2.27777 9.25348H2.02727L1.95002 8.99998L1.87315 9.25348H1.62265L1.82552 9.40873L1.74677 9.65848ZM3.0949 9.65848L3.29852 9.50248L3.50215 9.65848L3.4234 9.40873L3.6259 9.25348H3.37502L3.29815 8.99998L3.2209 9.25348H2.9704L3.17365 9.40873L3.0949 9.65848ZM4.58215 9.65848L4.78502 9.50248L4.98902 9.65848L4.90877 9.40873L5.11277 9.25348H4.86265L4.78502 8.99998L4.70777 9.25348H4.45727L4.66015 9.40873L4.58215 9.65848ZM6.05627 9.65848L6.26102 9.50248L6.46502 9.65848L6.38627 9.40873L6.5884 9.25348H6.33827L6.26065 8.99998L6.18377 9.25348H5.93327L6.13615 9.40873L6.05627 9.65848ZM7.53752 9.65848L7.74227 9.50248L7.94627 9.65848L7.86715 9.40873L8.0704 9.25348H7.82027L7.74227 8.99998L7.66502 9.25348H7.41452L7.6174 9.40873L7.53752 9.65848ZM8.37527 8.99998L8.5789 8.8436L8.78252 8.99998L8.70377 8.74873L8.90665 8.59423L8.65502 8.59498L8.57852 8.34148L8.50127 8.59498L8.25002 8.59423L8.45402 8.74873L8.37527 8.99998ZM1.0294 10.3174L1.2334 10.1625L1.43702 10.3174L1.3579 10.0657L1.56077 9.91123L1.31027 9.91198L1.23265 9.65848L1.15615 9.91198L0.905273 9.91123L1.10815 10.0657L1.0294 10.3174ZM2.37752 10.3174L2.58115 10.1625L2.78515 10.3174L2.70602 10.0657L2.90852 9.91123L2.65877 9.91198L2.58077 9.65848L2.5039 9.91198L2.25377 9.91123L2.4559 10.0657L2.37752 10.3174ZM3.8644 10.3174L4.06802 10.1625L4.27165 10.3174L4.1929 10.0657L4.3954 9.91123L4.14377 9.91198L4.06765 9.65848L3.9904 9.91198L3.74027 9.91123L3.94315 10.0657L3.8644 10.3174ZM5.3404 10.3174L5.54365 10.1625L5.74765 10.3174L5.67002 10.0657L5.8714 9.91123L5.6209 9.91198L5.54365 9.65848L5.4664 9.91198L5.21627 9.91123L5.41877 10.0657L5.3404 10.3174ZM6.82127 10.3174L7.02527 10.1625L7.2289 10.3174L7.15127 10.0657L7.35265 9.91123L7.10215 9.91198L7.0249 9.65848L6.94802 9.91198L6.69752 9.91123L6.90002 10.0657L6.82127 10.3174ZM1.74677 10.9762L1.9504 10.8195L2.15402 10.9762L2.07565 10.7242L2.27777 10.5712H2.02727L1.95002 10.3174L1.87315 10.5712H1.62265L1.82552 10.7242L1.74677 10.9762ZM3.0949 10.9762L3.29852 10.8195L3.50215 10.9762L3.4234 10.7242L3.6259 10.5712H3.37502L3.29815 10.3174L3.2209 10.5712H2.9704L3.17365 10.7242L3.0949 10.9762ZM4.58215 10.9762L4.78502 10.8195L4.98902 10.9762L4.90877 10.7242L5.11277 10.5712H4.86265L4.78502 10.3174L4.70777 10.5712H4.45727L4.66015 10.7242L4.58215 10.9762ZM6.05627 10.9762L6.26102 10.8195L6.46502 10.9762L6.38627 10.7242L6.5884 10.5712H6.33827L6.26065 10.3174L6.18377 10.5712H5.93327L6.13615 10.7242L6.05627 10.9762ZM7.53752 10.9762L7.74227 10.8195L7.94627 10.9762L7.86715 10.7242L8.0704 10.5712H7.82027L7.74227 10.3174L7.66502 10.5712H7.41452L7.6174 10.7242L7.53752 10.9762ZM8.37527 10.3174L8.5789 10.1625L8.78252 10.3174L8.70377 10.0657L8.90665 9.91123L8.65502 9.91198L8.57852 9.65848L8.50127 9.91198L8.25002 9.91123L8.45402 10.0657L8.37527 10.3174Z'
            fill='white'
          />
        </svg>
      )
    },
    {
      label: `Ru`,
      value: '/auto/ru',
      icon: (
        <svg
          xmlns='http://www.w3.org/2000/svg'
          width='24'
          height='24'
          viewBox='0 0 24 24'
          fill='none'
        >
          <path d='M0 9.375H24V14.625H0V9.375Z' fill='#1B75BB' />
          <path
            d='M20.25 3.75H3.75C1.26488 3.75 0 5.59688 0 7.875V9.375H24V7.875C24 5.59688 22.7351 3.75 20.25 3.75Z'
            fill='#E6E7E8'
          />
          <path
            d='M0 16.125C0 18.4031 1.26488 20.25 3.75 20.25H20.25C22.7351 20.25 24 18.4031 24 16.125V14.625H0V16.125Z'
            fill='#EC1C24'
          />
        </svg>
      )
    }
  ]
  const langRef = useRef<HTMLDivElement>(null)
  useOnClickOutside(langRef, () => {
    setShown(false)
  })
  const [selected, setSelected] = useState<string | null>(null)
  useEffect(() => {
    var addScript = document.createElement('script')
    addScript.setAttribute(
      'src',
      '//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit'
    )
    document.body.appendChild(addScript)
    if (hasCookie('googtrans')) {
      setSelected(getCookie('googtrans') as string)
    } else {
      setSelected('/auto/az')
    }
    //@ts-ignore
    window.googleTranslateElementInit = googleTranslateElementInit
  }, [])

  const googleTranslateElementInit = () => {
    //@ts-ignore
    new window.google.translate.TranslateElement(
      {
        pageLanguage: 'auto',
        autoDisplay: false,
        includedLanguages: 'ru,en,az', // If you remove it, by default all google supported language will be included
        //@ts-ignore
        layout: google.translate.TranslateElement.InlineLayout.SIMPLE
      },
      'google_translate_element'
    )
  }
  const langChange = (e: string) => {
    if (hasCookie('googtrans')) {
      setCookie('googtrans', decodeURI(e))
      setSelected(e)
    } else {
      setCookie('googtrans', e)
      setSelected(e)
    }
    window.location.reload()
  }
  return (
    <div
      className={'relative'}
      onMouseOver={() => setShown(true)}
      ref={langRef}
    >
      <div
        className={clsx(
          route === '/' && scrollY === 0 ? 'text-white' : 'text-black',
          'flex gap-3  font-medium items-center py-3 px-2 trans   cursor-pointer  '
        )}
        translate={'no'}
        onClick={toggle}
      >
        {languages.find(el => el.value === selected)?.icon}

        {languages.find(el => el.value === selected)?.label}
        <Drop
          className={cx(
            route === '/' && scrollY === 0 ? styles.homeDrop : styles.drop
          )}
        />
      </div>
      {isShown && (
        <div className={'absolute bg-white w-full border mt-1 '}>
          {languages?.map(lc => (
            <div
              translate={'no'}
              className={clsx(
                route === '/' && scrollY === 0 ? '' : '',
                'py-1 px-2 trans  cursor-pointer flex gap-2 items-center'
              )}
              key={lc.value}
              onClick={() => {
                langChange(lc.value)
              }}
            >
              {lc.icon}
              {lc.label}
            </div>
          ))}
        </div>
      )}
    </div>
  )
}

export default Languages
